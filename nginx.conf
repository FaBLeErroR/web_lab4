user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
    server {
    server_name domain.tld www.domain.tld;
    root /var/www/html/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # по желанию отключите откат до PHP-скрипта для ресурсов каталогов;
    # nginx вернет ошибку 404, если файлы не будут найдены, вместо передачи
    # запроса Symfony (улучшает производительность, но страница Symfony 404 не отображается)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/index\.php(/|$) {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # по желанию установите значение переменных окружения, используемых в приложении
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # когда вы используете символьные ссылки для указания корню документа на
        # текущую версию вашего приложения, вы должны передать PHP FPM реальный путь
        # приложения вместо пути символьной ссылки.
        # Иначе, OPcache PHP может неверно определить изменения в ваших PHP-файлах
        # (см. https://github.com/zendtech/ZendOptimizerPlus/issues/126, чтобы узнать
        # больше информации).
        # Caveat: Когда PHP-FPM расположен на другой машине, чем nginx
        #         $realpath_root может не разрешиться, как вы ожидаете! В этом случае попробуйте
        #         использовать $document_root.
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Предотвращает URI, содержащиз фронт-контроллер. Это приведет к 404:
        # http://domain.tld/index.php/some-path
        # Удалите внутореннюю директиву, чтобы позволить такие URI
        internal;
    }

    # вернуть 404 для всех других php-файлов, не совпадающих с фронт-контроллером
    # это предотвращает доступ к другим php-файлам, к которым вы не хотите его предоставлять.
    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
    }
       
	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
